/**
 * SWAPXRESTB2BAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of SwapXRESTB2BModelsTransactionsUserTransactionModel
 */
class SwapXRESTB2BModelsTransactionsUserTransactionModel extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.transactionId = this.constructor.getValue(obj.transactionId);
        this.description = this.constructor.getValue(obj.description);
        this.merchantCategoryCodeId = this.constructor.getValue(obj.merchantCategoryCodeId);
        this.transactionStatus = this.constructor.getValue(obj.transactionStatus);
        this.transactionType = this.constructor.getValue(obj.transactionType);
        this.transactionCurrencyId = this.constructor.getValue(obj.transactionCurrencyId);
        this.transactionAmount = this.constructor.getValue(obj.transactionAmount);
        this.walletCurrencyId = this.constructor.getValue(obj.walletCurrencyId);
        this.walletAmount = this.constructor.getValue(obj.walletAmount);
        this.walletNominalAmount = this.constructor.getValue(obj.walletNominalAmount);
        this.createdAt = this.constructor.getValue(obj.createdAt);
        this.fxRate = this.constructor.getValue(obj.fxRate);
        this.fees = this.constructor.getValue(obj.fees);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'transactionId', realName: 'transactionId' },
            { name: 'description', realName: 'description' },
            { name: 'merchantCategoryCodeId', realName: 'merchantCategoryCodeId' },
            { name: 'transactionStatus', realName: 'transactionStatus' },
            { name: 'transactionType', realName: 'transactionType' },
            { name: 'transactionCurrencyId', realName: 'transactionCurrencyId' },
            { name: 'transactionAmount', realName: 'transactionAmount' },
            { name: 'walletCurrencyId', realName: 'walletCurrencyId' },
            { name: 'walletAmount', realName: 'walletAmount' },
            { name: 'walletNominalAmount', realName: 'walletNominalAmount' },
            {
                name: 'createdAt',
                realName: 'createdAt',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            { name: 'fxRate', realName: 'fxRate' },
            { name: 'fees', realName: 'fees' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = SwapXRESTB2BModelsTransactionsUserTransactionModel;
