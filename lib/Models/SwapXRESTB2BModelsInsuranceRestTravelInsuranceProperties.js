/**
 * SWAPXRESTB2BAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of SwapXRESTB2BModelsInsuranceRestTravelInsuranceProperties
 */
class SwapXRESTB2BModelsInsuranceRestTravelInsuranceProperties extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.gadgetCoverIncluded = this.constructor.getValue(obj.gadgetCoverIncluded);
        this.territory = this.constructor.getValue(obj.territory);
        this.groupType = this.constructor.getValue(obj.groupType);
        this.passengers = this.constructor.getValue(obj.passengers);
        this.gadgetPolicyNumber = this.constructor.getValue(obj.gadgetPolicyNumber);
        this.nbGadgetCovered = this.constructor.getValue(obj.nbGadgetCovered);
        this.totalValueCover = this.constructor.getValue(obj.totalValueCover);
        this.excessValue = this.constructor.getValue(obj.excessValue);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'gadgetCoverIncluded', realName: 'gadgetCoverIncluded' },
            { name: 'territory', realName: 'territory' },
            { name: 'groupType', realName: 'groupType' },
            {
                name: 'passengers',
                realName: 'passengers',
                array: true,
                type: 'SwapXCoreServicesV2ModelsRockPassengerInformation',
            },
            { name: 'gadgetPolicyNumber', realName: 'gadgetPolicyNumber' },
            { name: 'nbGadgetCovered', realName: 'nbGadgetCovered' },
            { name: 'totalValueCover', realName: 'totalValueCover' },
            { name: 'excessValue', realName: 'excessValue' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = SwapXRESTB2BModelsInsuranceRestTravelInsuranceProperties;
