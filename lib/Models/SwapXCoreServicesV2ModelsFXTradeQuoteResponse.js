/**
 * SWAPXRESTB2BAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of SwapXCoreServicesV2ModelsFXTradeQuoteResponse
 */
class SwapXCoreServicesV2ModelsFXTradeQuoteResponse extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.quoteID = this.constructor.getValue(obj.quoteID);
        this.buyCurrencyId = this.constructor.getValue(obj.buyCurrencyId);
        this.buyAmount = this.constructor.getValue(obj.buyAmount);
        this.sellCurrencyId = this.constructor.getValue(obj.sellCurrencyId);
        this.sellAmount = this.constructor.getValue(obj.sellAmount);
        this.baseCurrencyId = this.constructor.getValue(obj.baseCurrencyId);
        this.rawExchangeRate = this.constructor.getValue(obj.rawExchangeRate);
        this.customerExchangeRate = this.constructor.getValue(obj.customerExchangeRate);
        this.marginPercent = this.constructor.getValue(obj.marginPercent);
        this.message = this.constructor.getValue(obj.message);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'quoteID', realName: 'quoteID' },
            { name: 'buyCurrencyId', realName: 'buyCurrencyId' },
            { name: 'buyAmount', realName: 'buyAmount' },
            { name: 'sellCurrencyId', realName: 'sellCurrencyId' },
            { name: 'sellAmount', realName: 'sellAmount' },
            { name: 'baseCurrencyId', realName: 'baseCurrencyId' },
            { name: 'rawExchangeRate', realName: 'rawExchangeRate' },
            { name: 'customerExchangeRate', realName: 'customerExchangeRate' },
            { name: 'marginPercent', realName: 'marginPercent' },
            { name: 'message', realName: 'message' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = SwapXCoreServicesV2ModelsFXTradeQuoteResponse;
