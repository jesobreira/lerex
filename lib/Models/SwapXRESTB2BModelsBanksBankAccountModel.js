/**
 * SWAPXRESTB2BAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of SwapXRESTB2BModelsBanksBankAccountModel
 */
class SwapXRESTB2BModelsBanksBankAccountModel extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.userId = this.constructor.getValue(obj.userId);
        this.currencyId = this.constructor.getValue(obj.currencyId);
        this.status = this.constructor.getValue(obj.status);
        this.beneficiaryName = this.constructor.getValue(obj.beneficiaryName);
        this.sortCode = this.constructor.getValue(obj.sortCode);
        this.accountNumber = this.constructor.getValue(obj.accountNumber);
        this.iban = this.constructor.getValue(obj.iban);
        this.bicCode = this.constructor.getValue(obj.bicCode);
        this.bankName = this.constructor.getValue(obj.bankName);
        this.bankCode = this.constructor.getValue(obj.bankCode);
        this.bankBranchName = this.constructor.getValue(obj.bankBranchName);
        this.bankBranchCode = this.constructor.getValue(obj.bankBranchCode);
        this.bankAddress = this.constructor.getValue(obj.bankAddress);
        this.bankCity = this.constructor.getValue(obj.bankCity);
        this.createdAt = this.constructor.getValue(obj.createdAt);
        this.updatedAt = this.constructor.getValue(obj.updatedAt);
        this.deletedAt = this.constructor.getValue(obj.deletedAt);
        this.isDeleted = this.constructor.getValue(obj.isDeleted);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'userId', realName: 'userId' },
            { name: 'currencyId', realName: 'currencyId' },
            { name: 'status', realName: 'status' },
            { name: 'beneficiaryName', realName: 'beneficiaryName' },
            { name: 'sortCode', realName: 'sortCode' },
            { name: 'accountNumber', realName: 'accountNumber' },
            { name: 'iban', realName: 'iban' },
            { name: 'bicCode', realName: 'bicCode' },
            { name: 'bankName', realName: 'bankName' },
            { name: 'bankCode', realName: 'bankCode' },
            { name: 'bankBranchName', realName: 'bankBranchName' },
            { name: 'bankBranchCode', realName: 'bankBranchCode' },
            { name: 'bankAddress', realName: 'bankAddress' },
            { name: 'bankCity', realName: 'bankCity' },
            {
                name: 'createdAt',
                realName: 'createdAt',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            {
                name: 'updatedAt',
                realName: 'updatedAt',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            {
                name: 'deletedAt',
                realName: 'deletedAt',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            { name: 'isDeleted', realName: 'isDeleted' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = SwapXRESTB2BModelsBanksBankAccountModel;
