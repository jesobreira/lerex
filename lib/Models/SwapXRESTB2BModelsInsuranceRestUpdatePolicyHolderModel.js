/**
 * SWAPXRESTB2BAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of SwapXRESTB2BModelsInsuranceRestUpdatePolicyHolderModel
 */
class SwapXRESTB2BModelsInsuranceRestUpdatePolicyHolderModel extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.userId = this.constructor.getValue(obj.userId);
        this.firstName = this.constructor.getValue(obj.firstName);
        this.lastName = this.constructor.getValue(obj.lastName);
        this.dateOfBirth = this.constructor.getValue(obj.dateOfBirth);
        this.email = this.constructor.getValue(obj.email);
        this.phoneNumberCountryCode = this.constructor.getValue(obj.phoneNumberCountryCode);
        this.phoneNumber = this.constructor.getValue(obj.phoneNumber);
        this.houseNameNumber = this.constructor.getValue(obj.houseNameNumber);
        this.street = this.constructor.getValue(obj.street);
        this.address2 = this.constructor.getValue(obj.address2);
        this.city = this.constructor.getValue(obj.city);
        this.postCode = this.constructor.getValue(obj.postCode);
        this.isoCountryCode = this.constructor.getValue(obj.isoCountryCode);
        this.gdprNotificationAllowed = this.constructor.getValue(obj.gdprNotificationAllowed);
        this.address1 = this.constructor.getValue(obj.address1);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'userId', realName: 'userId' },
            { name: 'firstName', realName: 'firstName' },
            { name: 'lastName', realName: 'lastName' },
            {
                name: 'dateOfBirth',
                realName: 'dateOfBirth',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            { name: 'email', realName: 'email' },
            { name: 'phoneNumberCountryCode', realName: 'phoneNumberCountryCode' },
            { name: 'phoneNumber', realName: 'phoneNumber' },
            { name: 'houseNameNumber', realName: 'houseNameNumber' },
            { name: 'street', realName: 'street' },
            { name: 'address2', realName: 'address2' },
            { name: 'city', realName: 'city' },
            { name: 'postCode', realName: 'postCode' },
            { name: 'isoCountryCode', realName: 'isoCountryCode' },
            { name: 'gdprNotificationAllowed', realName: 'gdprNotificationAllowed' },
            { name: 'address1', realName: 'address1' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = SwapXRESTB2BModelsInsuranceRestUpdatePolicyHolderModel;
