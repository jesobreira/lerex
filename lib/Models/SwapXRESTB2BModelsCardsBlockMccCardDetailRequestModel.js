/**
 * SWAPXRESTB2BAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of SwapXRESTB2BModelsCardsBlockMccCardDetailRequestModel
 */
class SwapXRESTB2BModelsCardsBlockMccCardDetailRequestModel extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.blockMCCId = this.constructor.getValue(obj.blockMCCId);
        this.userMCCodeId = this.constructor.getValue(obj.userMCCodeId);
        this.userMCCodeName = this.constructor.getValue(obj.userMCCodeName);
        this.userMCCodeIconName = this.constructor.getValue(obj.userMCCodeIconName);
        this.isActive = this.constructor.getValue(obj.isActive);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'blockMCCId', realName: 'blockMCCId' },
            { name: 'userMCCodeId', realName: 'userMCCodeId' },
            { name: 'userMCCodeName', realName: 'userMCCodeName' },
            { name: 'userMCCodeIconName', realName: 'userMCCodeIconName' },
            { name: 'isActive', realName: 'isActive' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = SwapXRESTB2BModelsCardsBlockMccCardDetailRequestModel;
